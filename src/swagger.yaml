openapi: 3.0.0
info:
  title: User API
  description: API for user management
  version: '1.0.0'
servers:
  - url: http://localhost:3005
  - url: https://api.catoff.xyz
paths:
  /user/login:
    post:
      summary: User login
      tags:
        - User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                signature:
                  type: string
                message:
                  type: string
                publicKey:
                  type: string
              required:
                - signature
                - message
                - publicKey
      responses:
        '200':
          description: Login successful
        '500':
          description: Login failed

  /user/addUserDetails:
    post:
      summary: Add user details
      tags:
        - User
      security:
        - bearerAuth: [] # Indicates that this endpoint is secured with bearer token authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Email:
                  type: string
                UserName:
                  type: string
              required:
                - Email
                - UserName
      responses:
        '200':
          description: User details added successfully
        '401':
          description: Unauthorized due to missing or invalid token
        '500':
          description: Internal server error

  /googleAuth:
    get:
      summary: Redirect to Google OAuth
      tags:
        - GoogleAuth
      responses:
        '302':
          description: Redirect to Google for authentication
        '500':
          description: Internal server error

  /googleAuth/callback:
    get:
      summary: Handle Google OAuth callback
      tags:
        - GoogleAuth
      parameters:
        - in: query
          name: code
          required: true
          schema:
            type: string
          description: Authorization code returned by Google
      responses:
        '302':
          description: Redirect to a specified URL upon successful authentication
        '500':
          description: Internal server error

  /googleAuth/signout:
    post:
      summary: Sign out user
      tags:
        - GoogleAuth
      security:
        - bearerAuth: [] # Assuming that sign out requires a valid JWT
      responses:
        '200':
          description: Logged out successfully
        '401':
          description: Unauthorized due to missing or invalid token
        '500':
          description: Internal server error

  /userBoard/dashboard/userCurrentTable:
    get:
      summary: Retrieves the current user's standings in challenges
      tags:
        - UserBoard
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  challengeId:
                    type: integer
                  challengeType:
                    type: string
                  currentValue:
                    type: number
                  rank:
                    type: integer
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error

  /userBoard/dashboard/userProgressGraph/{period}:
    get:
      summary: Retrieves the user's progress graph for a given period
      tags:
        - UserBoard
      security:
        - bearerAuth: []
      parameters:
        - name: period
          in: path
          required: true
          schema:
            type: string
            enum: [30days, 24hours, all]
          description: The period for which to retrieve progress data
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    time:
                      type: string
                    creditsEarned:
                      type: number
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error

  /userBoard/dashboard/userDetails:
    get:
      summary: Retrieves the user's detailed information including participation and rewards
      tags:
        - UserBoard
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  UserID:
                    type: integer
                  TotalRewardsWon:
                    type: number
                  PastChallenges:
                    type: integer
                  CurrentActiveChallenges:
                    type: integer
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error

  /player:
    post:
      summary: Create a new player
      tags:
        - Player
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                UserID:
                  type: integer
                ChallengeID:
                  type: integer
              required:
                - UserID
                - ChallengeID
      responses:
        '201':
          description: Player created successfully
        '400':
          description: Validation error
        '500':
          description: Internal server error

  /player/{ID}:
    get:
      summary: Retrieve a player by ID
      tags:
        - Player
      parameters:
        - in: path
          name: ID
          required: true
          schema:
            type: integer
          description: Player ID
      responses:
        '200':
          description: Player retrieved successfully
        '404':
          description: Player not found
        '500':
          description: Internal server error
    put:
      summary: Update a player by ID
      tags:
        - Player
      parameters:
        - in: path
          name: ID
          required: true
          schema:
            type: integer
          description: Player ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Value:
                  type: integer
              required:
                - Value
      responses:
        '200':
          description: Player updated successfully
        '400':
          description: Validation error
        '404':
          description: Player not found
        '500':
          description: Internal server error
    delete:
      summary: Delete a player by ID
      tags:
        - Player
      parameters:
        - in: path
          name: ID
          required: true
          schema:
            type: integer
          description: Player ID
      responses:
        '200':
          description: Player deleted successfully
        '404':
          description: Player not found
        '500':
          description: Internal server error

  /player/challenge/{ID}:
    get:
      summary: Retrieve all players of a challenge
      tags:
        - Player
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: ID
          required: true
          schema:
            type: integer
          description: Challenge ID
      responses:
        '200':
          description: Players retrieved successfully
        '404':
          description: Challenge not found
        '500':
          description: Internal server error

  /oktoProxy/authenticate:
    post:
      summary: Authenticate user with Okto
      tags:
        - OktoProxy
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Authentication successful
        '500':
          description: Authentication failed

  /oktoProxy/set_pin:
    post:
      summary: Set new PIN for Okto user
      tags:
        - OktoProxy
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Authentication successful
        '500':
          description: Authentication failed

  /oktoProxy/create_wallet:
    post:
      summary: Create wallet for Okto user
      tags:
        - OktoProxy
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Wallet created successfully
        '500':
          description: Failed to create wallet

  /oktoProxy/refresh_token:
    post:
      summary: Refresh tokens for Okto user
      tags:
        - OktoProxy
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Tokens refreshed successfully
        '500':
          description: Failed to refresh tokens

  /oktoProxy/user_from_token:
    get:
      summary: Retrieve user information from Okto
      tags:
        - OktoProxy
      security:
        - bearerAuth: []
      responses:
        '200':
          description: User information retrieved successfully
        '500':
          description: Failed to retrieve user information


components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
